{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwyat\\\\BloomTech\\\\LMS\\\\frontend-new\\\\review-frontend-test\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [jwt, setJwt] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(username);\n    console.log(password);\n  };\n  async function sendLoginRequest(event) {\n    event.preventDefault();\n    const reqBody = {\n      username: username,\n      password: password\n    };\n    const body = JSON.stringify(reqBody);\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    try {\n      let response = await axios.post('http://localhost:8080/api/auth/login', body, {\n        headers\n      });\n      if (response.status === 200) {\n        setJwt(response.headers.get(\"Authorization\"));\n        alert(\"response code 200 branch!\");\n        localStorage.event.preventDefault();\n        return Promise.all([response.body, response.headers]);\n      } else {\n        event.preventDefault();\n        alert(\"invalid login attempt branch\");\n        return Promise.reject(\"Invalid Login Attempt!\");\n      }\n    } catch (exception) {\n      alert(exception.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: event => sendLoginRequest(event),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: event => setUsername(event.target.value),\n        type: \"username\",\n        placeholder: \"Enter your username\",\n        id: \"username\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-button\",\n      onClick: () => props.onFormSwitch('register'),\n      children: \"Don't have an account? Register here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n//         fetch(\"http://localhost:8080/api/auth/login\", {\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             },\n//             method: \"post\",\n//             body: JSON.stringify(reqBody),\n//         })\n//         const body = JSON.stringify(reqBody);\n//         const headers = {\n//             'Content-Type': 'application/json',\n//         };\n//         axios.post('http://localhost:8080/api/auth/login',body, { headers })\n//             .then((response) => {\n//                 if(response.status === 200)\n//                     return Promise.all([response.json(), response.headers]);\n//                 else\n//                     return Promise.reject(\"Invalid Login Attempt!\");\n//             })\n//             .then(([body, headers]) => {\n//                 setJwt(headers.get(\"authorization\"));\n//                 window.location.href = \"http://www.google.com\";\n//             }).catch((message) => {\n//                     alert(message);\n//             });\n_s(Login, \"s3YJRvnXeKM1iY2NgJNDWXLriq0=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","props","_s","username","setUsername","password","setPassword","jwt","setJwt","handleSubmit","event","preventDefault","console","log","sendLoginRequest","reqBody","body","JSON","stringify","headers","response","post","status","get","alert","localStorage","Promise","all","reject","exception","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","target","type","placeholder","id","name","onClick","onFormSwitch","_c","$RefreshReg$"],"sources":["C:/Users/jwyat/BloomTech/LMS/frontend-new/review-frontend-test/src/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport const Login = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [jwt, setJwt] = useState(\"\");\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(username);\r\n        console.log(password);\r\n    }\r\n\r\n    async function sendLoginRequest(event) {\r\n        event.preventDefault();\r\n        const reqBody = {\r\n            username: username,\r\n            password: password,\r\n        };\r\n        const body = JSON.stringify(reqBody);\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            };\r\n        try {\r\n            let response = await axios.post('http://localhost:8080/api/auth/login', body, { headers });\r\n                if(response.status === 200) {\r\n                    setJwt(response.headers.get(\"Authorization\"));\r\n                    alert(\"response code 200 branch!\");\r\n                    localStorage.\r\n                    event.preventDefault();\r\n                    return Promise.all([response.body, response.headers]);\r\n                } else {\r\n                    event.preventDefault();\r\n                    alert(\"invalid login attempt branch\");\r\n                    return Promise.reject(\"Invalid Login Attempt!\");\r\n                }\r\n        } catch(exception) {\r\n            alert(exception.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n            <h2>Login</h2>\r\n            <form className=\"login-form\" onSubmit={(event) => sendLoginRequest(event)}>\r\n                <label htmlFor=\"username\">Username: </label>\r\n                <input\r\n                    value={username}\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                    type=\"username\"\r\n                    placeholder=\"Enter your username\"\r\n                    id=\"username\"\r\n                    name=\"username\" />\r\n                <label htmlFor=\"password\">Password: </label>\r\n                <input\r\n                    value={password}\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    id=\"password\"\r\n                    name=\"password\" />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n            <button className=\"link-button\" onClick={() => props.onFormSwitch('register')}>Don't have an account? Register here.</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//         fetch(\"http://localhost:8080/api/auth/login\", {\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//             method: \"post\",\r\n//             body: JSON.stringify(reqBody),\r\n//         })\r\n//         const body = JSON.stringify(reqBody);\r\n//         const headers = {\r\n//             'Content-Type': 'application/json',\r\n//         };\r\n//         axios.post('http://localhost:8080/api/auth/login',body, { headers })\r\n//             .then((response) => {\r\n//                 if(response.status === 200)\r\n//                     return Promise.all([response.json(), response.headers]);\r\n//                 else\r\n//                     return Promise.reject(\"Invalid Login Attempt!\");\r\n//             })\r\n//             .then(([body, headers]) => {\r\n//                 setJwt(headers.get(\"authorization\"));\r\n//                 window.location.href = \"http://www.google.com\";\r\n//             }).catch((message) => {\r\n//                     alert(message);\r\n//             });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}